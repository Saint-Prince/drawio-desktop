name: Electron Builder CI

on:
  push:
    branches: #For testing
      - master
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    env:
      CC: clang
      CXX: clang++ 
      npm_config_clang: 1
      SNAP_TOKEN: ${{ secrets.SNAP_TOKEN }}
      OS_NAME: ${{ matrix.os }}
    steps:
    - name: Checkout reposistory
      uses: actions/checkout@v2
    - name: Installing Node
      uses: actions/setup-node@v1
      with:
        node-version: 10
    - name: Build for ${{ matrix.os}}
      run: |
        if [ "$OS_NAME" = "ubuntu-latest" ]; then sudo apt-get update && sudo apt-get install -y libgnome-keyring-dev icnsutils graphicsmagick xz-utils rpm; fi
        curl -o- -L https://yarnpkg.com/install.sh | bash
        export PATH="$HOME/.yarn/bin:$PATH"
        # Use sed to replace the SSH URL with the public URL, then initialize submodules
        sed -ie 's/git@github.com:/https:\/\/github.com\//' .gitmodules
        git submodule update --init --recursive
        sudo npm install -g yarn
        if [ "$OS_NAME" = "ubuntu-latest" ]; then echo $SNAP_TOKEN > /tmp/login_token_file; fi
        yarn install
        if [ "$OS_NAME" = "ubuntu-latest" ]; then sudo snap install snapcraft --classic; fi
        #if [ "$OS_NAME" = "ubuntu-latest" ]; then snapcraft login --with /tmp/login_token_file; fi
        yarn run sync
        yarn run release-linux
        if [ "$OS_NAME" = "ubuntu-latest" ]; then yarn run release-snap; fi
        # Cannot configure electron-builder to publish to stable channel, so do it explicitly
        #if [ "$OS_NAME" = "ubuntu-latest" ]; then snapcraft push --release stable dist/draw.io-amd64-*.snap; fi
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: electron-builder
        path: |
          dist
          !dist/mac*
          !dist/linux*
        retention-days: 1