osx_image: xcode11.3

dist: bionic

language: c

matrix:
  include:
    - os: osx
      osx_image: xcode11.3
    - os: linux
      env: CC=clang CXX=clang++ npm_config_clang=1
      compiler: clang

cache:

addons:
  apt:
    packages:
      - libgnome-keyring-dev
      - icnsutils
      - graphicsmagick
      - xz-utils
      - rpm

# Handle git submodules yourself 
git:
    submodules: false

before_install:
#  - mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v1.5.5/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-1.5.5.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1 && /tmp/git-lfs/git-lfs pull
  - curl -o- -L https://yarnpkg.com/install.sh | bash
  - export PATH="$HOME/.yarn/bin:$PATH"
  # Use sed to replace the SSH URL with the public URL, then initialize submodules
  - sed -ie 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive
  - npm install -g yarn
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then echo $SNAP_TOKEN > /tmp/login_token_file; fi

install:
  - nvm install 10
  - yarn install
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo snap install snapcraft --classic; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then snapcraft login --with /tmp/login_token_file; fi

script:
  - yarn run sync
  - yarn run release-linux
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then yarn run release-snap; fi
  # Cannot configure electron-builder to publish to stable channel, so do it explicitly
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then snapcraft push --release stable dist/draw.io-amd64-*.snap; fi
branches:
  except:
    - "/^v\\d+\\.\\d+\\.\\d+$/"
